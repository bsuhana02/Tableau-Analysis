<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Used_Bikes - Used_Bikes' inline='true' name='federated.15a9oy10bqci571eu8eqs14sq0x2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Used_Bikes - Used_Bikes' name='textscan.1jmpvfz1ouxnfp1dr9p9b1nvwvz4'>
            <connection class='textscan' directory='C:/Users/ADMIN/OneDrive/Desktop/Suhana Bagwan_Cuvette_DS/Suhana Bagwan_Tableau' filename='Used_Bikes - Used_Bikes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jmpvfz1ouxnfp1dr9p9b1nvwvz4' name='Used_Bikes - Used_Bikes.csv' table='[Used_Bikes - Used_Bikes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='bike_name' ordinal='0' />
            <column datatype='integer' name='price' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='integer' name='kms_driven' ordinal='3' />
            <column datatype='string' name='owner' ordinal='4' />
            <column datatype='integer' name='age' ordinal='5' />
            <column datatype='integer' name='power' ordinal='6' />
            <column datatype='string' name='brand' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jmpvfz1ouxnfp1dr9p9b1nvwvz4' name='Used_Bikes - Used_Bikes.csv' table='[Used_Bikes - Used_Bikes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='bike_name' ordinal='0' />
            <column datatype='integer' name='price' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='integer' name='kms_driven' ordinal='3' />
            <column datatype='string' name='owner' ordinal='4' />
            <column datatype='integer' name='age' ordinal='5' />
            <column datatype='integer' name='power' ordinal='6' />
            <column datatype='string' name='brand' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bike_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bike_name]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>bike_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kms_driven</remote-name>
            <remote-type>20</remote-type>
            <local-name>[kms_driven]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>kms_driven</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>power</remote-name>
            <remote-type>20</remote-type>
            <local-name>[power]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>power</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[Used_Bikes - Used_Bikes.csv]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin) 2' datatype='integer' name='[Age (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[age]' peg='0' size='5' />
      </column>
      <column aggregation='None' caption='Age bins' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[age]' peg='0' size='2' />
      </column>
      <column caption='Avg Asking Price by Brand and City' datatype='real' name='[Calculation_762797203854274561]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [brand], [city]: AVG([price]) }' />
      </column>
      <column caption='Price bins' datatype='integer' name='[Price (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[price]' peg='0' size='65381' />
      </column>
      <column aggregation='None' datatype='integer' name='[Price (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[price]' peg='0' size='65381' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Used_Bikes - Used_Bikes.csv' datatype='table' name='[__tableau_internal_object_id__].[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Bike Name' datatype='string' name='[bike_name]' role='dimension' type='nominal' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Kms Driven' datatype='integer' name='[kms_driven]' role='measure' type='quantitative' />
      <column caption='Owner' datatype='string' name='[owner]' role='dimension' type='nominal' />
      <column caption='Power' datatype='integer' name='[power]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ADMIN/AppData/Local/Temp/TableauTemp/#TableauTemp_0kzibih0kqo0n311p21hp0uwtzux.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/26/2024 05:20:00 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>bike_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bike_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bike_name</remote-alias>
              <ordinal>0</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>1</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>627</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>2</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>kms_driven</remote-name>
              <remote-type>20</remote-type>
              <local-name>[kms_driven]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>kms_driven</remote-alias>
              <ordinal>3</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>owner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[owner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>owner</remote-alias>
              <ordinal>4</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>5</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>power</remote-name>
              <remote-type>20</remote-type>
              <local-name>[power]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>power</remote-alias>
              <ordinal>6</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>brand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[brand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>brand</remote-alias>
              <ordinal>7</ordinal>
              <family>Used_Bikes - Used_Bikes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aquem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barabanki&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bhilai Nagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Churu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dharwad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ganaur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jhunjhunu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kasba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kottayam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Margao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nabha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Noida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Porbandar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranip&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solapur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiruppur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vasai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amravati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Balaghat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berhampore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bijnor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dadri&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deolali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Godhara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamshedpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malout&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mughalsarai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pathankot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rajahmundry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sambalpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silvasa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thangadh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unnao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yamuna Nagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anantnag&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bardhaman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bharuch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bokaro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chikkaballapur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dharamasala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ferozepur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goregaon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hubli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jhajjar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kollam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mandya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muvattupuzha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nayagarh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phagwara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ramanagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sangrur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sirsi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thrissur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valsad&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Akot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aligarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhiwani&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cannanore (kannur)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dongargaon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gangaikondan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamirpur(hp)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaisalmer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jorhat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kendua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kurnool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mehsana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Naraingarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palamu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purnia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rewari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shimla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Srinagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tumkur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ahmednagar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arkalgud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burdwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dakshina Kannada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dharwar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gandhidham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jabalpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jind&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kathua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krishna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nadiad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Osmanabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pratapgarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ranoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seppa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sonepat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tiruvallur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vastral&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adalaj&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anekal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Banka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhatinda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinchwad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dhariawad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gadarpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guntur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jalgaon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jhalawar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kartarpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Koppal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mangalore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muzaffarnagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nazira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pinjore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sant Kabir Nagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sitapur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tikamgarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vandalur&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ambikapur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahadurgarh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgaum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bihar Shariff&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chatrapur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Durg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erode&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goa-panaji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honavar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jammu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalyan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kheda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Motihari&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panvel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silchar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaimadhopur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warangal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Pargana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bally&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berhampur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bikaner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chhatarpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Faridkot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gohana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hospet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamtara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanpur Nagar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muktsar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Navi Mumbai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sanand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Simdega&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thanjavur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uppidamangalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemmiganur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alwar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bagalkot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Batala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhuj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deesa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dwarka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hisar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kadi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kharagpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lonavala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moradabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nanded&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panchkula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raigarh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rupnagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sibsagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surendranagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udupi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adoni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anjar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Banki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Budhlada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinsurah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dharmapuri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gadchiroli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gurdaspur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Idukki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Karwar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mansa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muzaffarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nellore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pondicherry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ranga Reddy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Satara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Siwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tiruchirappalli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vapi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alipore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azamgarh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bargarh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chakan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dungarpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ganganagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hanumangarh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jajpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Junagadh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khalilabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kurukshetra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mettur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naihati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palanpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puttur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rohtak&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sultanpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Viramgam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alappuzha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Badarpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baripara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chaksu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Darbhanga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gangtok&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haridwar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalandhar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kachchh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khandela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lansdowne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mohali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nalagarh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qadian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roorkee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shivpuri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sundargarh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Udaipurwati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ambala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baghpat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Begusarai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bidar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ernakulam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghazipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hissar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamalpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kaithal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kharar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morbi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panipat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raigarh(mh)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saharanpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sidhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ujjain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vizianagaram&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amraoti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bahadurpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bellary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chenani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deoghar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Falakata&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Godavari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hooghly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamnagar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanchipuram&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khedbrahma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madurai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mubarakpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Narnaul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Parola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samastipur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Siliguri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Una&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wardha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arrah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barasat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhiwadi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buxar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dhubri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haldwani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jagdalpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jobner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Krishnagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raiwala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rasra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheikhpura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sonipat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tiruverkadu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vellore&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adyar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ankleshwar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bankura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhawani Mandi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulandshahr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chitradurga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dharmavaram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gadwal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Herbertpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jhumri Tilaiya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kasargode&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kotdwar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marandahalli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nizamabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poonamallee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rangpo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tirunelveli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baloda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Betul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bilaspur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chhindwara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhamtari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farrukhabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gondia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hosur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jatani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kanyakumari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mandi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nanjangud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Navsari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rajnandgaon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sangareddy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singhbhum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thiruvallur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zirakpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aluva&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Badaun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Basti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhubaneswar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Challakere&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davanagere&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durgapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gautam Buddha Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalaun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kadapa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khandwa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohammadabad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namakkal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raiganj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rudrapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sholapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udhampur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virudhunagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ajmer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alibag&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhiwandi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calicut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dadra &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dibrugarh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gangaghat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamirpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Katni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kullu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meerut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagaur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palakkad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ratnagiri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Ganganagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trivandrum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vidisha&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abohar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anantapur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Balrampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bharatpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bodhan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chikamaglur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhanbad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Farukhabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howrah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jaunpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Karim Nagar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mandi Dabwali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murad Nagar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nawanshahr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Perumbavoor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rajouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sangli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sirsa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thiruvananthapuram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:brand:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ideal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bajaj&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TVS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harley-Davidson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KTM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hero&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benelli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yamaha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rajdoot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LML&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahindra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Royal Enfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Triumph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jawa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyosung&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yezdi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kawasaki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ducati&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Used_Bikes - Used_Bikes.csv' id='Used_Bikes - Used_Bikes.csv_0193D65983244F3893FA4FA2CFD62760'>
            <properties context=''>
              <relation connection='textscan.1jmpvfz1ouxnfp1dr9p9b1nvwvz4' name='Used_Bikes - Used_Bikes.csv' table='[Used_Bikes - Used_Bikes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='bike_name' ordinal='0' />
                  <column datatype='integer' name='price' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='integer' name='kms_driven' ordinal='3' />
                  <column datatype='string' name='owner' ordinal='4' />
                  <column datatype='integer' name='age' ordinal='5' />
                  <column datatype='integer' name='power' ordinal='6' />
                  <column datatype='string' name='brand' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Average Asking Price of Bikes by Brand and City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Avg Asking Price by Brand and City' datatype='real' name='[Calculation_762797203854274561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [brand], [city]: AVG([price]) }' />
            </column>
            <column-instance column='[Calculation_762797203854274561]' derivation='Avg' name='[avg:Calculation_762797203854274561:qk]' pivot='key' type='quantitative' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_762797203854274561])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:Calculation_762797203854274561:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' />
              <size column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:Calculation_762797203854274561:qk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BE26C19A-BFB1-46E0-8407-D28E912FCE06}' />
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column aggregation='None' caption='Age bins' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[age]' peg='0' size='2' />
            </column>
            <column aggregation='None' datatype='integer' name='[Price (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[price]' peg='0' size='65381' />
            </column>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Age (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[cnt:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Price (bin):qk]</cols>
        <show-full-range>
          <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Price (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{BE15A4B1-7CD7-4301-AAD9-4056CEE0C82B}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Bike Price Comparison Across Different Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{09244835-A187-42BC-9B99-7E33508E82DF}' />
    </worksheet>
    <worksheet name='Q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Bike Availability Based on City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' />
              <size column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[sum:price:qk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8650A62D-E293-4C58-80CB-EA27E1A3519D}' />
    </worksheet>
    <worksheet name='Q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Bike Price Distribution by Engine Power</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[power]' derivation='Avg' name='[avg:power:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column caption='Power' datatype='integer' name='[power]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:brand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:power:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:power:ok]</cols>
      </table>
      <simple-id uuid='{BF215CDD-8F7B-4F89-B007-48B40EA55622}' />
    </worksheet>
    <worksheet name='Q6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Price Analysis by Engine Power and Kms Driven</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[power]' derivation='Avg' name='[avg:power:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column caption='Power' datatype='integer' name='[power]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:brand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:power:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C1DDF4B-9E08-4159-8FA6-4090D0F57ABE}' />
    </worksheet>
    <worksheet name='Q7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Price Comparison for Different Bike Brands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:brand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' value='58' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
              <text column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[sum:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</cols>
      </table>
      <simple-id uuid='{FE669073-0ECB-4321-984E-354881B46BD6}' />
    </worksheet>
    <worksheet name='Q8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Bike Price vs Kms Driven</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[kms_driven]' derivation='Avg' name='[avg:kms_driven:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Kms Driven' datatype='integer' name='[kms_driven]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:brand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:kms_driven:qk]</cols>
      </table>
      <simple-id uuid='{696F0806-925C-4C81-B157-9984C9A17E06}' />
    </worksheet>
    <worksheet name='Q_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='16' italic='true' underline='true'>Distribution of Bike Prices Based on Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Used_Bikes - Used_Bikes' name='federated.15a9oy10bqci571eu8eqs14sq0x2' />
          </datasources>
          <datasource-dependencies datasource='federated.15a9oy10bqci571eu8eqs14sq0x2'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age]' derivation='None' name='[none:age:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:price:qk]</rows>
        <cols>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:age:qk]</cols>
        <show-full-range>
          <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[Age (bin) 2]</column>
          <column>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Age (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D0A63EA8-97EE-4074-ABBC-480BED7C0791}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='13' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{48B01BED-DC28-4B7C-AD8D-AB95340304AC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</field>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D5AF8E5-2B40-4FE6-A235-C70AF8428BB1}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Age (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Age (bin):ok]</field>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Price (bin) 2:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50755D61-9CAD-4BEC-97F9-73A6870C21A0}' />
    </window>
    <window class='worksheet' name='Q_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:Age (bin):ok]</field>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{504ABA34-E546-4A76-A20A-98567E756332}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EA0182B-3921-49C1-81A0-52EE480CA7DD}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D0DD6BF-37EB-4AC0-9F91-161BE6E635AD}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71A1B970-9512-461A-BDF2-9096B3883A1E}' />
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:power:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[avg:power:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65266858-F6CA-44AC-924B-44933DB9B378}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EB383F6-877C-410C-A3B7-77BFEE535C17}' />
    </window>
    <window class='worksheet' maximized='true' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a9oy10bqci571eu8eqs14sq0x2].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88804DB9-5BFB-4B56-8FD0-E00AE52FDECF}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{63BB2304-1C67-43D1-8062-E08C9C0A64D0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACF0lEQVR4nO3TMQEAIAzAMIZ/z0MGRxMFfTq7uweCZmbu7wj4yQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIM
      QJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSHtb
      egWA0FAUAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1' width='192'>
      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
      7yHW/3+9X0ap/8iCDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      PNjhqhuyH2gbpkIx4kvS2TydipG2DE3TN8TRjLSI6JtzKfzpf6Knqxs4Y3vn/yCHDj9ymxde
      eIGhoSHu3r3LW2+9ZWhKmUQigcVioaGhgc7OzvWpcqrFZrNx9erV9TqAkVyuX7++szpA/7FB
      +rsbmZhaQL93O0rc8+joIMkyqCr377EdD5CX2IWB9jsfrC/Brgz6l3blfHYpl4euy1Y/n3/+
      OZIk0dfXx6effvrY7bf68fv9mM1mPB4PTqdzywkUvsvPfRvF/VhGYiiKstNXoEmi8VXaevqJ
      z4+T1xwc6mnk1o1r1Lf1YNIKBDyODV4gWZbRDfYAyrK80QtkwH8jSdKGipe03fI33yGXDXEN
      xHg4F9nIzStt5Wfa+XXZCpfLxZ07d/jHf/xHMpmMoQpsOp3m1q1bFAoFkskkb775ZtVxKpUK
      0WiUn/zkJ8zOzjI0NGSoVWpgYGBnAmhq66Kpbe13f9+3SwmdPHXfC7T2TtlSv5OjCA4K9+3Y
      v/zlLw1XPHVd59ixY+uvQUYwmUwcOnSICxcuYLVaeeGFFwzFuXjxomgFEnx3kskk8Xgcq9W6
      PsCmWpxOJ93d3ZRKJSKRiOGlYwcGBhgYGKBcLvPFF19w/vz5ql//jh8/LvoBBN+d48ePc/78
      eSwWCy6Xy1CMfD7Pv/7rv3L9+nVu3rxpKIau66ysrBCNRllaWsJsNhuq+zQ1NYkSQLA12XSa
      dCq55XfPn3mO6OLmqVVsDge+QN0j47pcLv75n/+ZP//5zxw+fNhwpf1Xv/oVg4ODFAoFw62K
      8/PzQgCCrYktL3H3VnWmucaWto0C0HVIxDdtZwXeOHOvDhF/aOkokwk8j+5gu78A4fLyMq2t
      rYZLo6GhISEAwR7z299Ut30oDD/6ySM3UVWVjz/+GL/fz+joKCdPnsTjeXQn3la8+OKLog4g
      ePqQJAmbzcbq6iqDg4OGX4GuXLkiBCB4+pAkCbfbTUNDA1euXKG+3ng7+45egXStwp8/+pAj
      f/UyM3duUFGs9DbXMb6wgstXh0Uq4zbrVBwNNAsvkGCXqFQqqKrK8vIyL7/8MkNDQ4Y8RYcP
      H96ZAGYnx2jt7EYvJXGFe3GRYiaW4fRzg2tLJGVixHBz7jn3M79EkhE/i6o+lIu2O7kYmS9G
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
      xYGfp/z/FqK8562syBEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dZ3hc132n33vv9D4YYNAL0dnAIlKkRPWuxHJT4qZ1HHfHm2wc25uyseM0
      P846ayexd+MUrxKv/USxYsl2bIuqlqhCkZRIkWIFARC9DzC9z9y7H8CONhjMYADMfZ+HHzgY
      3HtmcH73nPOvgqIoCioqRYpY6AGoqBQSVQAqRY0qAJWiRhWASlGjCkClqFEFoFLUqAJQKWpU
      AagUNaoAVIoaVQAqRY0qAJWiRhWASlGjCkClqFEFoFLUqAJQKWpUAagUNaoAVIoaVQAqRY0q
      AJWiRhWASlGjCkClqFEFoFLUqAJQKWo0hR6AygzJtIw3FieYSBJPpUnKMjpJwiBJ2AxanAY9
      oiAUepjrDlUABUBRFCKpND3TATqnfPT5QwwHwiRlmbmqlAmARhQpNxtpcFhoLbHT5nJg0WkQ
      VFEsC0GtDLdypGWFHm+Ag0PjnJ70Ek6msr6WQSPR5rKzp8rNVrcTSVR3s9mgCmAFSMkyJye8
      7O8eZDgYnvMpvxyqLCbua6xmZ2UpGlUIS0IVQJ4Z9Id4/OwFerzBvN+r1mbmPW0NtJc68n6v
      9YIqgDyRkmWe6Rni2QvDJGV5xe4rCQI315Tz8MYGdJK0Yvddq6gCyAO+WJzvvd1F55S/YGOo
      sZn5xPY23GZjwcawFlAFkGMmw1H+/uhZxsPRQg8Fh0HHJ3e0s8FhLfRQVi2qAHLISDDC/37j
      NL54otBDuYxBI/HbuzbR6LQVeiirEtVkkCOmIjG+c/TMqpr8ALFUmu8cPcuAP1TooaxKVAHk
      gGgqxT8eO8dUNF7oocxJOJnin986hz+2usS5GlAFsExkReFHZ3sZCoYLPZQFmYrG+f7JLmR1
      x3sNqgCWybFRD4eGJgo9jIw44/HxYt8o6rHvCqoAlkE0meKJc7059+zmk190D6zarVohUAWQ
      JYqi8MyFIfzxZKGHsiRiqTQ/6+pXV4GLqALIkulYnJf7xwo9jKx4c8TDYGB1n1lWClUAWXJo
      aIJYOl3oYWSFArzUP1roYawKVkU+gKwohGIJBr0heiZ89E8HGPaGmA7HCEQTRJIpEqmZyabX
      SJh0GuxGPSVmA9VOC7VOK20VTiodFqx6bd5j5OPpNK8Mrs2n/yWOj0/xzlgdDoO+0EMpKAUT
      QCKV5tSwh1e6hjk+OMngdJDAMu3UNqOOxlI722vL2NdczaaqErR5CAjr9PgJrLG9//XEUmlO
      T/rYV1te6KEUlBUNhUim05wanuLpU328fH6I6XAsbxYUUQCHycBd7bW8o6ORlnInWik3O75/
      PXGeIyOTOblWIdlY6uB3dm8u9DAKyooIIBhL8NTJXv7zeA9dE758325O2iqcfGB3G7e11mA1
      6LK+TkqW+cqBo3jXgVdVEgS+ee/enD0Y1iJ52wIpikIkkeInb3Xz2JFOJoKRfN0qIzrHvPzZ
      zw7hthr5wI3t/NoNLRi0S//4E+HomjN9zkdaUbjgC9DmKt4EmrwIIJmWeepkL//08ttMBgsf
      Fnw1E8Eo33rhLZ481sV/vXM7d7TVLCmfdjgYWVfhBAP+sCqAXNI94eOv9h/h5JBnVXtIh7wh
      /ujJV7mluZrP37eTGmdmMfOjocKuZLlmbJ19nqWSMwEk02meONrF/3nxBPHU2rGPv9o9zNH+
      cX7v3p08tK1x0dXAtw72/lfjjRV3WEROBOCLxPnLnx/i5a7hXFxuxYkmU3ztqSO8NTDBF+/f
      teAhOZineP9UPIak0+MfGSLsmUQQBexVtWgMBnRGE/7RIexVtTn3cQQT6+M8ky3LPv53jXv5
      2L8+s2Yn/yUUYP+pPj71/55jaIEKDok8JbiHPJOMnzuNpNEiabVYyioIjI0wfu40oalJ+t94
      PS/3ja2h1TofLEsAb/aN8ZkfvMCQd/1kG/VM+vnM91/g5JBnRe8bDwbwDQ1gKXMj6XQz/zQa
      FFkmODaCvaJ6RcdTLGQlAEVReOHsAF94/GWC62xPDDARjPDfHvslx/rHZ/1MylOYhcHmoHrb
      DUx0nUMQRQRBQBBFrO4K4qEQki5738VCaIu8kFZWZ4AD54f4yk8PkkivXL2blSacSPHF/3iZ
      r//arexqqLj8ukWnzcv97FUzT3ir+0pogslZAkBJ/Ya83BPAmIUvZD2xJPkrisKJwUn+9D9f
      X9eT/xKheJI/eOJVuq/yXtv0+XkSFwpnkQfDLUkAvZ4AX/yPA0QS2Rd1XWsEYwl+74cvMeaf
      iZ8vX2eFptxmQ6GHUFAyFkAgGudLP34Nf3T97fkXYzwQ4Us/eY1YMkWV1VTo4eSUWpu50EMo
      KBkJIJWW+fozb9I9WZhAttXA20Mevv3L41SYjZg066fmZq3NUughFJSMTkD7T/Xx3Jn+fI9l
      1fPE0S521ZdTY7NwfrpwdT9zRaXFSKkpuy2QrCh4AxGGJ32MegJ4fCH8oSjBSJxEMoWsKEii
      iNmox2rS47KbKS+xUllqp7rMjm6VHL4XHcV4IMLfPX+MdRT/lTWyovCNZ4/y8Xu2rQsBbC93
      ZfQ+RVGIxJL0DE/yxpl+jp8f4vSFMQLhGIlkakkxX5IkYtRr2VDpYnNjJdtaqtm1sY4yhwWp
      AGHZC+YDpGWF//HjV3nx3OBKjmnVc1t7DUmLhqS8dp8KoiDwhzdvo2aBM0AwEuPNswM8c+gs
      h0/34fHlJ5FeI4m01bm544ZW7t7dSkutOy/3mYsFBXCwe4TPP35gXYX/5gJJFNi3rZ6IsHa/
      lyanjc/duAVJvNaxJ8sK3UOT/PtzR3n+SCfeFc7j0EgiGxsq+PW7d3DvnnYsxvyaaecVQCot
      85FHny5YBtdqx2410NzsXrNN6j61o53tFVe2QOm0zOHTffzLzw/xxpl+0qtgdSuxmfjQ/bt4
      3z07cebJ+javAJ493ceXfnIwLzddL7S3lGOxrj07eq3NzB/cvO1y29W3zg/xrR++xLHOQeRV
      MPGvp9Ru5kP37+KRB3ZjWkY661zMKYDkxad/t/r0XxCnzUhLS/ma2iKKAnx21yY2lToZmwrw
      rccP8ItXT62Jz1DhsvHFR+7mnt1tOTswz2kFOnRhlB518i+KNxCl2mBgMLq60j4X4oaKUloc
      Np548TjffvwAU/61UyFubCrAf//2j7l9Rwt//NH7qXAtv+nHLAEoisKP3+pe1emMq4nAdIRq
      t5nhAif9Z4LLqOeu6nJ+/9s/4fk3Ogs9nKxQFHjpWBenekb40sce4K5drcs6h81aR0b9YQ71
      qGXzMuVI7xjvbqnHuMq9w1pRYKvByGe++m9rdvJfjccf5vf+9gn+5rEXSSyj4fgsATx/doDU
      Crb1XOsEYwn6J/x8eGsLGnF1WoQEwOiN8o1/2s/QOtraKgr8y88P8Tvf+A/8oey2odcI4FKi
      i8rSeOHsANvKS/jg5uZVJwJFUfB2j/H0L94gsg6TlwAOvt3Lx7/6b4x4lu6dv0YAnlCUC5Nr
      38W/0rzZN04smWZvdRkf2NyUt6yxpaIoCgMn+jh1qJP0Os/f6Owf59Nfe4zhJQZsXiOAN/rG
      11RJk9VCNJni7aFJhItd2j+1sx1LgYO99KKI/9wIgycHiiaOq290mk997TFGl7ASXCOAuXJg
      VTLj2MCVPmFb3SV8bs9W6goUalxhMeLyRjl9tKforHkDY14++/XHMzbvXhZASpY5N+bN28DW
      O6eGr60iUWU18YW9W3mopQ79CkU56kSRuxqq2CnpefKpI2vCuZUPuocm+eK3fkwsg5pHl/8y
      oViCwen56+GoLEzPpP9yE49LaCWRB5tr+aN927mxquxy6EGuEYDNpQ4+v3crm41Gvvro0yRT
      63vPvxhvnh3gr773HPIiFs3LG9XJYJToMuypxU4wlmAiGJmzxqjbbOQjHS082FzLS30jHB31
      EMrBd23QSOwod3FLXQX1dguhSJzPfednhCLFXe7wEk++eJyO5irec8e2eZ1llwXQPxVYsYGt
      R5JpmTH/3AIAEASBcrOR929u4l1tDZzz+Hh7YpoebwBPJLNGIQIzVRzqHRa2l7toL3VgvVim
      RZYVvvlvL9A1uPYbd+QKBfj6D55nZ1stDVVzJ/9cFsDEKitjvhaZCGQWDmHQSGyvcLG9wkVK
      lvHHEgwHw4yEooQTSaKpNClZRieJGDQSNr2OUpOBSosJp0GHbo62T68c7+bHL72d64+05glH
      E3zln5/iu3/8IbRzeOuvEsDqj2VZ7XjCS3+IaEQRl8mAy2SgI8t2XcFwjL989OmiPfQuxrHO
      QR5//hiPPLB71s+uOQSrLI9QrDCVlv/ppwcZUw0YC/L3T7zCxBzf0WUBxJKFc4BZ9FrKbSY6
      qkvJxk7ithqx6Gf2wi5L4RJUosmVF0DP0CSPP3d0xe+71giEY3znyVdmvX55C1TIADitJHJ7
      aw1HeseoLbHS4nbSOzXjzdtU6eL8uJdwPEmz28GQN0Sz2875cS8GrYYqh4WBqQClFiOheBKX
      xcBUKFaQz1EIL/qjPztEZJ30LMs3P3/1FP/lwRtpqi69/NrlFSBfNupMGZwO4jDpqXZasBp1
      aESRLVUuAtE4ZVYjLosBrSRS5TAzFYrhMhupclhwW02Y9Vq2VJfijcQx5ql4bSbkoyfxQvSO
      TPGL106v6D3XMrFEikf/83WuToK8vALoChjPHk2mODM6hd2ox5TUgDITmNfrkbgw6aPKaSES
      T2HUahgPRiizGPGEoiTTMqF4glF/mK5xHy6LgYECmnNXOhL0+/uPkFZD15fEc0fO8VsP30KN
      2wlcJQCzvnBPzlgyTSyZnlV3dDo8s5XpGp+J8Bv2zTTi6PPMPcnD04XdCiyn//BSGZ8KsP/1
      Myt2v/VCNJ7kh88d4wuP3A1ctQVymoq7THYusOe5hs3VPHekU/X4ZslTB08TvXhuuiyActv6
      qnpcCBb7DhVFmfUvG9JpmSdfOp7V76rAhDfEqyd6gKu2QFWO4q4SvFwEAcrnKDOoKArTsRhj
      4TAT0TDBRIJ4esZapBMlbHo9bpOJGosVuz6zFaRrcEINeVgm+w+e5t4b268IoNphQYCiix/P
      FSatBrftSvMMRVEYCAY4Mz3FeDg8z/eaZDoeoy/g55gwxga7g47SMmyLCOGFN87ndOzFyJHT
      /fhC0SsCcJj0uG0mxjOMZ1G5liqHBcfFM0AwkeDw2AiDwcy9sylFocvn5YLfR0epmy2lpWjm
      aGCnKAoHT17I2biLFX84xvn+iStnAINWQ2OZvZBjWtO0lDsRBIHJSISnenuWNPmvJq0ovDU5
      zgsD/STSsx1rHl9I3f7kiAPHuq5NidxVn2U0lgo76tyMR8I8299HJLX8WP+RcIjnBvounxcu
      ca5//LIFQ2V5HO0cvFYAO+rcWcXiFDsC0Frp4KXBARJy7sIhJiIRXhseuibK80TXcM6uX+yc
      7x+/VgDNbgdl1vXVBXElaCi1MRgN5OTJfz39wQBd3plcbUVRONenFi7IFcm0fK0ADFoNNzdV
      FWo8a5amKjvD4VDern9sYpxoKkUyJdM7OpW3+xQjs8wMd22sK8Q41iyiIOAuy++qGUunOO+d
      Jp5MMunNn9CKkVkCuKG+nLqSufNaVWbjdhqxWvIfA9Tt8zLlD6sH4BwzSwBaSeRXtm4oxFjW
      JDsa81fu5GoCiQSD66Az5WpjzopN79zepB6GM6DGaWF3c8WK3e/M6MTib1JZEnMKoNRi5JE9
      G1d6LGuOz9zeQTS9+Jbk9Ouvc+LAAbqPXwlgi4XDxMJXyvclE4vnZA/7Vybv16TX0lrnptRh
      psbtmPXzHa018/6uxaTn4Tu3z9u4wmLUY9DNBCC0NxTe7zRvBdf37mzm34+cY0wNjZiTjZUl
      3N5Wy4+6F282EQtHEEUROS3Tdewthru72bhnDwoKo4ePkIjH2LR3L1rdwmeJ5AqlXIqiyO6N
      dYSicc72jXPXrlY0kkgkliSZSqHXaWmpLaO1zs2kL0Q4msBk0HKqZxSdRuL8wATTgTAtNWXU
      V5aQSKaIJZJ4g1EcFiODE162t9RgMeox6bWU2M10DUzSXl9OIBLDYtSj00q8frKX6TzPv3mL
      Vhq0Gj59e4fqGJsDAfj07R3oNRJiBt+QxeFg6y37CExP4Z2YIBoOE4uEiYcjREMhvOMTi5bw
      m7nxyv01TveOceRMP0a9FoNOS3mJlXgixeHT/SiKwoYqF95AhFFPALvZQDqtUON2XO7i6HZa
      0ekkZFmmstROMiVTU+bAH45iMeoZHPcy7PEzPOlHlhUaq10c7RxAp5GYDoR548xAzjtCzsWC
      Nbzv21zPT473cEKNPbmGW1tr2NtYCYBRIxFLL+wAM9vtnDl0mKaODnyTk9hLSxEEAZ3JiLPc
      TWVjI5nUMLfpVybjLJ5IMjjuJRpPEI0nMeg09I54mLzYKb5rcJJQJE5HSxXBcIy0LNMzPIk/
      FEOnlWiuKaN/bJqRST8Wo56+s/2MTPpxO634QlESyRRt9eUEwlFkRSEcS/B21zAdzVWc6RtD
      URRC0cSsJt75YMFO8QDdEz4+8ujTJNd5g4VMsRl0/MtH76f2oqn4wNAgF/xLa8qgKAojPReo
      3NCAKM08JScHBymvr1/w9zRTSb7+D09nO/S8IAoCdRVO+kanCz2UrFi0bnez28HHbtmyEmNZ
      E3z69o7Lkx+g3LT0TDpBEKhubkK8WEVCFMVFJ78oCGysKFvyvfKNrChrdvJDBgIA+PDejWqk
      KHBney3v3dlyzWvVFuuKtEQqM5qocanh6rkmIwHoNBJffmgv7iLOG25w2fiDB3bP2pdatFpq
      LPn3nLc7S7Ca9NjMhat8tx7JuHVJpd3Mn7/zJvSrvB9uPrAadPzFu2+mZI7JJwgC28rcmX+R
      WeDUG6i32TDotDnpjq5yhSX93XbWl/Pld+xdkdP5akErifz5u26iraJk3ve4jEY2ukrn/fly
      EIA9FZVIoogkiTRUzl3nXiU7lvzgundTHb97946i8A/oJJEvv2MvNzdVoSgKaVkmlkoRSsYJ
      JRMk5TTyxfImO9xuyoy53yJuLS2jwnyl2sTW5sqc36NY0es0C/sB5kIQBN6/uw2Av3v+LdLr
      tCa9VhL58kN72dNcwTmfh8loiEAiTvI6h5Ve0uDQGXCbzNxUWcmrI8NMx3JTnLfNWcIOd/k1
      IQWbN6gCyBUdzdVLFwDMiOB9u9sw67V87akjpOT1JQKDVuKTd27B4FB4afjCgqVi4ukU49EQ
      49EQkiBg1xtIpLWEllkqfVtpGdvd5bMiTVvr3FiMekJRtSrcctm1sS77s5soCDy0rYlvvO/2
      FS0JmG/sJh0fuacNi0tgOh5dUp2ktKLgTUTRaGTMWjEr86hdp+eu2jo2lbpIyulZxW/tFiM3
      bKxd8nVVrkUAbtvetHzjxU1NVfzjh++mZY6owbVGg9vKB+5spMSx/JADrUagzKynxeHErFm8
      8LBOEnGbdZRbNfSFJjg4doGDYxd4faKXt6eGmYyGLpdS3LtZzddYLuUuG43VpYuHQmRKJJHk
      Wy+8xU+P95BeY1sinSRyX0cdm1vsiFJuj/dWrZ6bKmoJJ1N4ohGCiQSxdBoB0EsSFp2OuBzH
      nwwv2uPLqjWw0VFOwBfjVz//D2pp9GXw63fv4E8+/mDuBAAzbvHXukf4m+eOMrRGclebyux8
      9q5tBLUR4osEtWWLy2Dk5oo6NOK1PpS0InPWO8Z4NPM4f0kQabOX85Vv/YLXT/bmeqhFgSAI
      PPqlR5Z3BpgLURC4taWa733sAT66bzMG7ep1mlkNOj5x6xa++5v3gSmVt8kPMBWLcmZ68ppq
      0IqicN43saTJDxdF4xvjtj3NuR5m0dBQWcIN7TPnqKysQIthNej4rTu28StbN/Doq6d4/uzA
      qokmNeu1vKOjkY/cvIlSi5Ee/zSeWP6Tfi4Epqmx2CgxzPgKxqNBRiLZ5fgqKLg3WHA5zUx5
      w4v/gso1fPC+Gy6blnO6BZoLRVHomwrwo6NdPHOqj0CB2rFaDTreu7OZh3e2UG4zIQgCKVnm
      2cGuWeUH80WZwcS+ynpkFA6P92WUTrkQzzx3lv3Pql1ilkKJzcRP/9encVhmct7zsgJcjSAI
      NLhsfO6eHfzmvk281DnE/pO9dI55874qGLQSmypdvHN7E7e31sxqAzUY8q3Y5AfwxCL4EjFk
      Jb3syQ9wy81NHHi5m4ja4zlj3nvn9suTH/IogGgqyXAoyEQ0jC8WI3ExbECywztvrccTKGdg
      IsiF0QDj09FZ/cGypdRipKOmlL2NlezZUEG53Txn2ZKZ+v0rW2ZEAQaDfvSa3FiazGYd77hj
      M48//VZOrrfecdpMPHL/rmtey6kAFEUhmExwdtrDQNC/oFnPatayeUMJmxqc6CUNUkoiHYWh
      6RD900HG/CGmw3GS6TSptIzCTNagKAhoJAG9RoPdpKPGaaXWaaXZ7aCtwkmt04okCnNWJLia
      eDpNILHy3tTJWBj7HA0JR/oHqaqv5fyJU7RuyzwB6dfv38GLh7vUinEZ8Ju/uofS6zoh5UwA
      aVnm9PQk571TS4oPEgRhpqKymMZs1/Ke5iZqrDMhv7KsEEmmiCdTKBf/r5FE9BoJo06zrIJU
      gUSMlLLyB/NQMoFWmv39TI2NMzU+zmBPLxqdlpH+Qao31NNz6gyNm9oZ7OnFXuJk+817rvk9
      s1nPZx++lT/77v6V+ghrkobKEt5/7w2zXs+JGTScTPDScD9npz3LCo4Lp5IcHB3kbc84sqIg
      igIWvRaXxUipxYjbZqLEbMCs1y67GlsoufiWS1EUUqkUsiyTXqDyczqVyrjhnawoxOe4ls6g
      p3FjO3ank84TJ5FEkVQySUN7K8lEgq17dhGPzg6ykwSB99yxbcFaPcWOJIr8/ofvwTxHlYll
      CyCUSHBguB9PNDemRAU4O+3h2MToop7R5RDPoI5/LBKh89hx/FNT9J3rZHJ4BJ/HQyQUYqjn
      AvFYDP/UFAf3P0M8FqPvXCfxaHTR64rC7K+9tKIcs9VCfWsTO/btRZQknC4XrnI3DW2tdJ08
      TVXD7MLFJo0OSRT544/evyJlRNYi77ptK/u2Nc35s2WZQVOyzAuDvfjiuQn/vZ6NJaVsdbkX
      3c9nw5npCTp9ngXfEw2HeeHxJ7GWOHC4XKTTadLJFAhQ2VBPYNpL0OtDo9XQtHUzb/7yAEaz
      mX2/+sCC1622WAgmFxfKYoiCwG2VzUiCiKIo/ODpN/j6959f9nXXE7XlDh77i49it8xd6jPr
      FUBRFI5NjOZt8gOcm/Ywmqe6+3M1oJuLDZs30nHzXiSNhmQ8TjqdQmcwUFFfhyAKpJJJwsEQ
      I739VDc2oGQQn1NtduQkkd5tsCJdXE0EQeBD9+3irl2ty77uesGo1/LVzzw07+SHZRyCxyNh
      +gJLq4ezVBTg2MQo5SYzUoYTNlNMGURo6o1GWrZtRdJosNjtRMMRNBoJjU6HJEk0b9lMvLmJ
      dCqF2WbDPz3Nhk2L11R16AxUmR0MhrxZj19EoM7ivOY1SRL500/8Cn0jU1wYURtp/O7772BH
      28Kh41nNKllRODk1sSI9hcOp5JILT2WCVbt4DoMoiuj0eiRJQqvTYXM6MFmt6PR6BEFAq9dj
      sduxu1xotFpc5eUYFqkTZJA06CUNjVYXZk32e/YGqwurbnaSvtNm4pufexhnkVf3/uB9N/DI
      A7sXfV9WApiORZmOLX8Pmynd/inSGZgsZUUhkIgzGAzQ5ZuiyztFr9+HJxohdd3WxKLVYdTk
      3RE+C7vOgCQIaESJDlc1emnpY6g02ai3zp+k31RTyjc/9zDGOfwNxcADN23iC4/cndF7szoE
      H5sYpcu3stXA7q7dQOkcSeeKouBPxOnxexkMBoinU3OuTJIgUGY002R3UmW2IIkixz2j9Aay
      34Zkw86yKuqtV5KHYqkkp72j+BIZWI8QqLOU4DbaCCdShBMpEnIaSRAxazXYDToMGgmNOHMo
      fu3EBb7wd08SKaKuMvs6Gvnm596bsUVsyQKQFYWn+roILzPndalsdpWxxeW+5rVIMsnJqQn6
      F/E6X49Tb2B7WQV6SeTF4ZWLqdeJEvfWNqOTrg0TlxWZ4bCfgZCX2BwxQsm0jCeUwhtW8IST
      eKIxYnOUSteKIiVGPY1OK5tKnWxxO3n73CCf/9sni6K10m07mvmfv/0uLEtI0V2yAMLJBPv7
      ule8GkSl2cKtVXUIgoCiKHhiEV4fHSaSyu4PKwJtzlLCqRjj0ZUJKd7oLKPdOX99T1mRCScT
      hJJxkoqMNxrn8JCHt8d8RFNL91qbtBp2VLhwxtJ84/8+jT+cP4tdoXnPHdv4w9+4d8m+kCWf
      AaKp1IKTf+RCL4qiMD44uOi1EvE4/qnMtlKhROLy1mY4HOSlof6sJz+ADJz1eogk0wgrUOXI
      otHRZJ9/3w4zDjKrzoBdZ+btkSD/+EYPh4ems5r8AJFkitcGx9nvmeKOd++htHT9VZXTSCKf
      ee8t/MnHH8zKEbjkE1hyEQ9qIh7n1OuHqKiv58yRN5BlGXtJCaP9A4iiOGM1KXUx3HOB+vY2
      jr/8CjXNzTjKXAx197Dlpr0YryoEdfV9FUVhKhbl0NhwzlYgTyyKRhSQ8ljbUBIEtpdVohUX
      zpBTFIU+f4jvnTjPYCB3q1JaURhV0jTesRkOd+EZXNgBuFawmvT85Wce4o6dzYhZmsmX/FuL
      7bXr2lrxTXpwVVYQCQYZONdJJBhi4+4bMNttKIpM2O8nEgwyMTRM284dAIR8AaLBEBODQ/Ne
      OynLHBkfmWXRWS4pWUEv5sciJABbXeWUGWeL+moUReHIyCR/ffDtnE7+a9BKNO5rZ9stG9Hr
      Vt4Clkt2ttfy+Fc/xl27WrOe/JDFCqBbxGwnCAKVGxpAUUglU1gcDkw2KxqNBrPNBopCOBBA
      ZzBgslpm7OaCQMjnR2c0ojfOXf1YI0qc903jz1MIc1qBKpOVkUjuGtHNTP4KGs4zRpoAAAv7
      SURBVKzORd97fHyK777Vmdf4p0uD0te6ePeGCjoPd3H8/PwPnNWIyaDjU+/ex4cf3I1Ou3wR
      L/kQHEok2N/fnf8/1HU49HrCyRmzX77Y5a5EQeGMd2LZn08nSuwoq6TSZF00lmk8FOVrrx0n
      mFhZS82DTTWI4wH+/olXGJ9emQ6U2SKJIvfc2MbnP3gXlaW2nMWHZWUG/UVv17IOoNkgCkLe
      LU9uo5k7a+rxxqOcnp7IKlleAKrMNjaXuDFrFz+URZIpvn7wRP62PQsgAJ/c2U6L1cJjz77J
      Y88exR9aOQdnJggC3LR1A5981z52ttfmvCl5Vo6wQ6ND9K9wOuFKCEAUBB7a0IJRo0VWFDyx
      ML1+LxPR8KLJMzpRotJspdHmxK4zZPSEUhSFH5zs5qX+0Vx9hCVj0Wn40q07KDUa8AWj/Ptz
      R/nRL48z4S3siqDVSOzd0sDHHrqJHW01OY8Fu0RWAhgJBXllZCAf45kTnSihoJBYgUpot1bV
      UX1dx5dEOo03HmU6HiWYiOFLxIilUoiCgF1noMJkodJkxaJbWo3UTo+Pv3797RWJqVqIHRUu
      Prtr0+WnazyR4pdHz/PzV09x+HQf8UT+aiZdjQDUVji5e1cb771jGw1V+e+FkNUpotxsxqrV
      EcwgqyoXVFmsGSWwe4ZHOHXoEO6aGkw2G/XtbQye7yLk8xENh+m4Zd+izahDyThwrQBEQSAh
      pwgkovjiM6mUl5qEBJIxAv4YPYEpzFodVSYbtRYHWlFccBVIyzJPnusr+OQHOD42Rde0nzbX
      TIiGXqfhwZs2cf+ejYxO+XntxAVePdHDG2cGCMfimXR0zRiNJFJb7uTW7U3ce2M7GxsqVtRC
      ldWdJEFkk6uMw2PDuR7PLPSSRLPdSW8Godel1VU43W7adt3AydcOUlLuJpVI4BkdY/OeG9Fo
      Fw8OS1xVJkVWFEbCATp9k4v2Ak5fDMQLJCbp9k/RZHfRYHXOm3dwxuOjxxtYdDwrgQL8omuQ
      1hL7NaIVRYHqMgfvu2cn77tnJ7F4kvODE7x5doDO/nEuDE8x6QvhD0VJLVLiRgBMRh0lNhPV
      ZQ42bqigo6mKTRsqqSorXPO/rKVWZ7XT6/cxkecwgi0uN4YMYvevp6y6mpMHX2fHHbdT09LM
      268eRNJocJQt3Mro0gRIymlOeEYZjy49ISelyHT6JhmLBNlZWoXpusOwoii8Nji+Kp7+lzjn
      8TESjFBtm99fYdBr6WiupqO5Gpj5HOFoglA0TiAcY8ofJhxNkLyY8ywIAga9FqfViN1iwmbW
      YzEa0K2ikplZC0AUBG6sqOa5gZ68FZeqt9ppsjtJyGk0gphRFQdXZeWML6KhnvGBAUwWC8df
      fgVRmvFCL4Ze0hBLJTk6OZJRhOZC+BMxXhvrZ7e7Bof+Snx+KJHkrbHV5Y1NKwpvjE4uKIDr
      EQQBi0mPxaRfs837lnW0Nmu17KuqQ7eIiz8b3EYzN5TPTGatKGUcu1/T3IQoioiSxM477wBg
      +223svPOO9DoFl9JrFodxz2ZhSdnQkJOc3Ty2qC97unAquyqc3J8esX9O4Vm2balMqOJ26rr
      cppcUm22cktV7eXYGVEQ5swFyDUaUWQk4mcqnttiubF0ihOekcuT69xUflNJs2U4GCE6R5j1
      eiYnxlWX0cTdtRuoNFkWf/NCgxEEtrrc3FRVg/a6mPkaS/6XWL0kMpbDUIirmY5HGQrNWLKG
      CuD0yoSkLDMRXl2OsHyTM++CWavjluo6bq6swbaIqXHWIASBOqud++oa2VhSernSwdVUmMxY
      MvCsLgdZkfN6MO3ye0jKMuOreJIVmwByanAVBYFaq51qiw1PNEJ/0M9kNEwkmZzlxdVLElad
      nkqThVqrDesiTiRJFNlcUsbh8fyYXk0aDdIcJQtzSSydYjjkJzGPyTARCdN38AB6i43a3Tch
      SnOfrRRFYfL8Gdxtmxk5/ibpVBJXUysm54zjKDw1yXRvD67GZkwlM1YvRZbxdJ+jrHUTUZ8X
      RZYxlcx2NIVXyOm1WsiLx0EUBNwmM26TGVlRSKTTJNLpmVwCYaYyglaUFnUWXU+9zU5f0Md4
      JLdbCI0gUmO1MhrJv11+oaLBcjqNvaqWdDJBYGQQ70AfBqsNRQGdxYLOZGa6txuLu4J4cGar
      loiEkXQ65GSSrhf2I+lmKlYIoohvsJ+Y34d/ZAhnbQPxUJDht44Q8Xqp2Nwx5xjmSrVcz+Qx
      DeTiDQQBg0aDTa/HZTThMpgwa3XoJGnJEX2iILCnojqjrosZXxPYVV6ZUdWJXBBKxVEW2GiN
      nztF1Ocl6vNSvX0XqXgcjV5PdHqKqM8LgkBg9MoqaLA5qN11E3qrHWdDIyanC2tFNe6NW0gn
      E0xd6Eaj0yNqNDPltRFwt2+a9/7aHDcJXO2suawIk0bLbdX1HBheXkrkJXa4K6m32ukLzp+a
      mUqlOHfsODWNG3CUzh+fEg4EMVrMKLJMOBDEVjI7D2Chya/R62m+8z7kVApJp2Oi8wwlG2Zq
      WiqyjLW8knQijrnUPTOhAa3ZzOCbr+Osb8TsciOnU4iSBo3BgKO2AU2LkanuTnQWK47aBlLx
      GOHJCUpb2uccgykHMfZriby3SMoXkWSSQ2NDTGRZlFcvSexyV1FjmYnXf2bg/LyOtpOHjlBW
      VYXeaCCVTKLT60kmElw4fZby2hocpS4SsRhTExNU1teTSiYRBIES99wJ8K/0+JgMZx5H5R3o
      xV5dN++ZIJd88aYONpau/Z7PmZL3LVC+MGm13F5dzw3uyozKHF5CFAQabQ7urWuk1nolsWKh
      J3NLxxYGzncxfKGP/s4uxoeG0Wi1GK0WdAY940PD9HV2EY9EOfzcL9HpdYwNzF8UoNa2NHOx
      s27Dikx+SRCoXKCO5npkTa93kijS4ihhg83BYCjAYDDAdCx6uR0TzARhSYKIVaejymyhwebA
      otXNOn9oRYn0PAFv3smZsIVELEYkFGJ8aIhELMZgVzc2p4OB890kEnFatm5hw8Y2JoZGkBZw
      DDY5bRwbXdnCYplQYTFizcBbvp5Ys1ug+UjLMtHUTOqkoihoRBGDRrNoCcKDY/144/m3gWtF
      iR2uGv7ohTdWVTAcwO31lfxGR0uhh7GirOkVYC4kUcSyREcczNTsXAkBWLQ6XEYDzSU2uqZX
      Rzg0zKyUN1bNX7RrvbJmzwC5psJkXfxNOaDcaEEUBG6tq1yR+2VKrc1Mq6twcfmFQhXARRw6
      w5IO09kgCsJlod1QWUqZae4SMIXg7g3VOU84XwuoAriIJIo02hYuXbhcqky2y5UiDBqJ97Q3
      5PV+mVJvt3BTTXmhh1EQVAFcRY3Zjn2OphO5QCtKtDquzUbbXVVGe4G3HRpR4H2bGi/nOBcb
      qgCuQhJFOlwVaOaIRl0OArC5xI3hOkuUKAj8xrbWgpoeH2yqpa0I9/6XUAVwHTadge2lVTlp
      YneJVkcZVaa5q5mVm418dHsrmgI8gTvcJbyjtS4vXTjXCqoA5sBtNLOzrDrjTpLzISKwyemm
      yVay4CTbVu7i4fYNy7rXUml22vjEzrZlf8a1zrpzhOWSYCLOae84U1mUSLRodWwtqaDEkFkq
      Z1qW+eHpC/yybyTvDrIOdwmf2tmOscgC3+ZCFcAiyIrCZDREt38KX2LxDitmjY4Gq5Maiw3N
      EosFyIrCgf5RHj9zYd6kmeWgEQXu2VDNO1vr0WtWT2mSQqIKYAlEkgk8sQj+RIxIKkFaUWby
      HSQNNp2BEr0x47qgCzEaivDYqW5OT+Yueb7WZuZDW5podRVPpGcmqAJYpaQVhbdGPTx7YXhZ
      FeTcZgMPNNWyt8aNfgUiStcaqgBWOYqiMBAIc3RkkhPj00xEogtujzSigMOgZ3OZkxurymgu
      sRX9QXchVAGsIWRFwReLMxaKMhWNEYwniadl9JKIWafFZdTjNhtxGQ1F69haKqoAVIoadW1U
      KWpUAagUNaoAVIoaVQAqRY0qAJWiRhWASlGjCkClqFEFoFLUqAJQKWpUAagUNaoAVIoaVQAq
      RY0qAJWiRhWASlGjCkClqFEFoFLUqAJQKWpUAagUNaoAVIoaVQAqRc3/B1yFQd3oBHbyAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daXNb15nnf3cBQOwguC/irn2hJMvWEiuRs7SXadty2jWumsSVz9Dzel6k
      qj9Bv5markpVV6Zm0p1yur3E3Rknim1ZtixZ1i6KpLjvBEgCxA7cdV5QokVJlAyQFCny/KpY
      BQL3PPe5uPjfsz3nOZJt2zYCwRZFXm8HBIL1RAhAsKURAhCsKmNDfXR191IwrCccaTI3F38q
      Pj0Odb0dEGwuvjh/kRcPtvPphevsqPGiuDzEpseo2dZKOjZDSpfo3N3O9esX6LqT4le/fGNd
      /RU1gGBVySVj3OwZJhxy8ac/fYqnTCaWSBMd/ZYLl28TGenli0/+g1DrXtyqst7uCgEIVhdJ
      kvB6PSQTSeqa2/BZCYZncnh9HtweD7IiEywP0n3tGgVr/QcgJTEMKtjKPNUawDTNp3k6geCJ
      iCaQYEsjBCDY0ggBCLY0QgCCLY0QgGBLIwQg2NIIAQi2NEIAgi2NEIBgSyMEINjSFB0ObdsW
      Q723qW7bh9NIMTgxw67tbYz096ApPlrqQvTcGaC+eTuYOQJulfm8SlW597F2+/v7GRgYAODo
      0aOEQqHSrkggKIKiBWDqGpg5MjpgWhRyKTCSpA0vTiPFwGCCtl17Ge7vQ1VsJnIauw90Ytv2
      4t+D2LbNzZs3eeONN0in01y8eJGf/exnq3F9AsFjKVoAqrMMv7cMC/AFgqiKDLaJrDhRUdBM
      G4eqIEsS+UwCzXIjSxKWZWLb9rIBcXv27OGTTz4BFmoAETgneBoULYBCJsHIZAwlO4gVkJmb
      izE134iUnyKtemnfVsOta1epbmhFsQKEvE6mZ+I0VJcDoCgPL4KwbZvx8XFkWUbTNCKRCBUV
      FSu/OoHgCTzV9QCmaS4rgA8//JA9e/aQTqfJ5/OcOHHiabkl2MJsCAEAxONxPvzwQwKBAG++
      +eayxwkEq8mGGAa1bZszZ87wzjvvcPToUT7//PP1dkmwRdgwWSEaGho4e/Ysuq6zf//+9XZH
      sEXYME2ge1iWxYULFzh69KhoBgnWnA3TBLp27RoXLlwAoKqqClneEK4JNjkb5lc2NjZGRUUF
      3377LYODg0iStN4uCbYAG0IAkiSxe/du2traKCsro7Kycr1dEmwRNkQn2LZtenp6uHjxIg6H
      g46OjvV2SbBF2BA1AEChUACgqamJZDK5zt4ItgobZhQomUxSKBRIJBI0NTXhdDqflluCLUzR
      AjAKWS6dP0v7C6+SGe8ilspQ27qDqb7bGKqb7Q1hBifn8JdX4aCAV7WxfXXUhX3fexj066+/
      5tixY2IYVLDmFB8N6vLQ0dqIBRRslecO7aWn+w6+6p14rBjjc1kOP3eYvp5ekqkZ5pQgLzQt
      /PhN01w2HPrq1atomsbExAR79+7Ftm0MwyjKt5s3b3Lnzh3C4TA/+tGPxFCq4IkULQDLMikU
      NOxCAUsvMBOdRQ1Uko5F0CSdco+L6egMmiXhL69B0nLEMhph70KTZrlguK6uLpxOJ2+99Rbn
      z59n3759RfllGAajo6Ps3r2bbDbLlStXOHbsWLGXJ9hiFN0E0nJpRsenUJxuttVVMhmJ0dhY
      Ryo2g664qQh4mBifoLq+EVMvUFbmIpPJ4fN5H9sESqfTXL58mXA4TEtLC36/v+iLOX/+PMlk
      kiNHjiBJkgipFjyRDdEJtm2b999/nyNHjpBMJonH45w8ebIo27Zt88EHHzA9PY3b7eaNN94g
      HA6vluuCTcqGaSSXl5dz+/ZtBgcHqa6uLrq8ZVlYlkV7ezsvvPACd+7cWQMvBZuNDVED3I9l
      WVy6dInnn3++6E5sX18fX3zxBcePH2fnzp1iFEnwRDZEDXBvJvjatWsAJdUApmly6dIlOjs7
      GRgYoKenZ7XdFGxCNoQAAHp7e5Flma6uLu7cuVP001+WZYLBICMjI3R2duJ2u9fIU8FmYkPE
      AgF0dHSwc+dOrl69SiAQKLq8JEm89tprwEIz6uLFi7S2toqoUsFjWZ8+gJaBQqK4wq4gOJdP
      rmXbNl999RWhUIhdu3YxMjJCW1ubEIDgsaxPDTDbA70fFldm55tQ/9yyH5umSTKZRFVV+vv7
      mZycpL29fYWOCjY7G6YPsFJUVaW9vZ2jR48Sj8epra1db5cEzwCbRgC2bRMMBpmcnKSmpobZ
      2dn1dknwDLAiAaTiUW5330EzLCZHBxmZiGDqeXpud5HMFkgk5jG0DLFEZrX8fSx//OMfmZmZ
      YXZ2Fl3Xn8o5Bc82K+oDDE9E6Gison9oAFNTcUqzDCZnqWtpZ2RoELdLYSKbpW3PgdXyd1kk
      SeLdd9/F5XJh2zb5fH7Nzyl49lmRAMJ+NwPDY+iyitvbiMsySGk6HrcLhyKTikfRpABORV4S
      Di1ZFsXO0ZqWhf2E8GhVVRfPc+nSJU6cOCFGgQSPZUUCcDic6LaD9o7djPbeJK562d5QwY0r
      V6mo3YbP5yHoVpmcidN4f3LcEuL0FVkGdXl3DcPg1q1bRCIR4vE4p06dwuFwlHxtgq3BigRQ
      Xd9EdX0TAPsOHVl8/7lwzZLjig9sLp57MUQVFRX8+Mc/ZmBgQIwECZ7IhpkJXilOp5N3332X
      TGahw93W1rbOHgmeBTaNACzL4q9//SsAuq7j9XrFLjOCJ7JpBCDLMuXl5Rw/fhxN07h+/fp6
      uyR4Btg0E2HA4qiPqqrL7kcmENzPphGAbdt8++239Pf3Y9s2NTU1Ty4k2PJsmiaQaZpMT0+T
      zWZRFIWhoSFaWlrW2y3BBmfT1ACKotDU1MQPfvADRkZGSlpVJth6PLM1gJ7LYmpLwx12NDei
      pxMcO7QQepFPxJZ87vT6kVUxOSb4jmdWAPHhXmJDxa37bTr+UzzlVWvkkeBZZNM0gQSCUlhR
      DRCdGGZydp7m9l3ExvvRFB/tDWFu9/ZT17wD2cwScKvMa05qwr7V8lkgWDVWJIC5WJKach+z
      M2PocpgyO0n/0Bi7Og8x2NMDtsZYAQ4e7sSyLGzbxrIssO2iqx7LtsGyFv8vZYx/8fwCwV1W
      1geQwUQCQ0dCgrt/EiBJYJoGliVj2wuf3JucKjVAecUTW/Yq2BBsKlYkgIDPw1w8TW1TO4np
      IfKKl/aWGm5fu0ptUweylaPc52J6Jk5DdTm2bS+EQ5cQoy9LEtyX6a2UOH9JlkS2OMESViSA
      huYOGpoXXleXf7e59aHDh+++Wsjv0+BZyVkEgrVDjAIJtjRCAIItjRCAYEsjBCDY0ggBCLY0
      QgCCLY0QgGBLIwQg2NIIAQi2NCuaCTYMHcuyURQVsAAZWZYwDGNxYbokSdi2LXZtF2xIViSA
      2ekJpicncFY1k42MY6pOWmtCTMTSuDwBnJKOWzZRy7dRU7787i4CwXrxSAGk02kymcwTMyvU
      NjaTTGVpqXUyyA485hyTiQIHOg/Q19NLKhVlTg5xtM276slxSwlrtkwT4wkJdgVbi0cKYHx8
      nJ6eHl566SWCweCyhfVsAssVwFkWJDvXQ06xqQ56GB4ZxUDBX16Lw9KYSWSpCi5ExK1WctxS
      mlSyoqA+JsGuYOux7K9B0zT++Z//mbfeeovm5uZHHiOpZXS0BEGS2LmzBVN24ve4mJudo7mx
      Ecs0cDhU8gVtzS5AIFgJjxRAMBiktbWVUChEV1fXsgJQnWWLr73+72qKyqq7C88VJwDusjIE
      go3IIwVQV1dHXV3d0/ZFIHjqLNuQtow8Z/78/xgfnaQgltEKNinLCiAxdouZjMHonWtMP509
      7gSCp86yAgg07KJcNZnRXDSIjCaCTcqyAkhO9FK550V2h22mtkgNYNs2V69e5Q9/+AM3b94U
      GSS2AMsKINS0n+zwZSaM4JapARKJBDMzMwSDQWZnZ5mamlpvlwRrzCMFoKXn+OrcWQbHJhnp
      72I+97TdWh/8fj+WZaHrOtu3b3/sJKBgc/DIYVCnr4JDezuQgs384NCOp+3TumFZFplMhomJ
      CQzD4OWXX15vlwRrzLJNIMO06b58jn/5138lvkU2Xc9ms/h8PpqammhsbCQaja63S4I15pE1
      gJmN8afPLhIIV3P69Os4l5FJPp2gf3iM5rYdxKeH0BQfzbUheu8MUN+8HYwcfrdKIq9Q+QxE
      gwYCAfx+P6lUilAoRENDw3q7JFhjHimAXGIGy+nFTEzwlzOf86NTp/A5Hz7uzp1eZJcfhTTJ
      ghsXCQYH5mnZuZvh/n6cqsRENs+uA52LeUHvjawUm9jQBrhvVMamhBGaJ+QGTaVSRCIRTp48
      yZUrV/B6vWKnmU3OIwXgqWrhxSMuLHthpxXnMrHLminR2dFAb28fiqcRh50nrRk4VRVFksim
      4mi2B0WSsKyFUGjTNEsKh7YsC9s0F/+3reIFYFkW5n02HsThcGCaJpcvXyaXy+F2ux97vODZ
      55ECkFUXTc0tAETGBtDNR4ugpaGaW92D1G/bTmxygKTipaOxmlvXrlJV30IwFCDkcTA5E6ex
      uhxY73Bo+bHh0Kqq8vbbbwMLayJ0XS86fNqyLL755hsaGxuZnZ3l4MGDRfspeHose3ctQyOZ
      zlIwLFy6Bs6H20CV9c1U1i9EitZUHFp8//DhyiXHPSu5cQ3D4M9//jOKoqDrekk7zd+8eZOy
      sjI+/vhjmpqa2Lt3Lw6H2Jdso7LsYzQ11c3HZ87z1eef8/5HH5PZAgupMpmFKe+/+Zu/we/3
      Mzc3V7SN2tpaKioqeOONNygvLxfp2Dc4y9YALl8Y9DtYspPd7U1shaiAQCBAa2sr7733Hg0N
      DSWFhMuyTFdXF1NTU4RCoTXwUrCaLCsA05IJBf3s2H2C7a0NJe/q8iyRSCSIx+Pouk48Hica
      jRa947zL5cIwDKqqqti3b19JG3kInh7LNoHcoWq2VXr5+L3/TXSLBMN5vV6i0ShjY2MkEgl8
      vuKDoPx+P6dOncLn86GqqhDABmfZGiCfiqEE6/m7t/8O7xbpwzkcDk6fPg1APp8vKRp0YGCA
      y5cvMzs7y9DQEO+++65YiL+BeeSd0XMJPj37FfGZaZw1O/l589aIB7q3i6QkSRQKBaampti1
      a1dRNiRJ4siRI2SzWcbHx0UNsMF5pAAkJFwuF06XgxLnXJ9Jstksv//978nn8wQCAV555ZWi
      bbS3ty++rqqqYn5+noqKitV0U7CKPFIAqjvAz175L9iWSXRqDGOZiTDBw9i2zZUrV6iurmZu
      bm7ZjBqCjcFjG6eSrFDT0PKUXFl/3G43bW1t1NbW0t/fX9IwZldXFwB/+ctfqK6uZu/evavt
      pmAVWVHG2mwyTl9fH8lsgcRclNn5FLZlMj46imZY5HI5bEsnk3k24qnn5+cB+Oyzz2hsbGRi
      YqJoG/X19fT19eH3+8nlcqIDvMFZ0d0ZGh2ltr4Jj9Pk1p1ZZEkn63GhBCvoudOPxymBlqO6
      bc9q+bum+Hw+6uvrOXDgALOzs4TD4aJthEIh3nrrLQCuXr2Krus4HxFGItgYrGyj7Lo6ZiJj
      zM0plAVq8Vgx4nmDfdVVpGIxUvEomhyko0x9JpLjyrJMW1sbsNCWv3PnDp2dnUWdIxqN8u//
      /u/s3LmTmzdvsn//fpEafgOzIgFkUkky2QLBumbmRnuZV91sbwhz5fIV/OVVBCpq8TtlxqJx
      tm2IaNDHJ8fVdZ2PP/4Yv99PIpHg1VdfLboJU1dXxzvvvENVVRX79++nrKxMxANtYFZWA7R0
      cK+P3Fr/3cKRirpnc+QjmUxSU1PD2NgYe/fuJRqN0tLSUpQNSZKoupsb1TAMhoeHlwyNCjYW
      ood2H6FQiLa2Np577jmmp6epra0t2sbk5CR+v5+zZ8/icrn4yU9+sgaeClYLIYD7yOVyfPTR
      R4sTYa+99lrRSyLHx8cxDINwOEwikcAwjKI7wbZtE4lE0DSN+vp6MZK0hohv9j5s22bfvn24
      XK7F5ZvFsm/fPrq7u2lubiYej5e0GObatWskEgl6e3upqanhzTffFCEVa4QQwH34fD6OHTuG
      LMuYpllSR3t6epre3l7y+TyaptHU1ITL5SrKhsvlIp1O09jYSDAYXNxsULD6bGkB/Pab33An
      2l1Umf/x8j/gdiy/yFOWZTo7O9E0jUuXLnH8+PGi/WppaWFgYIB0Os3evXvFMOoasqUFEElN
      MRQbKKrMk+YfmpubF7eJDYVCJTWjLl68yIkTJ/j666+5fv06TU1NQgRrxJYWwFoxOjpKKBRC
      0zQSiQReb3FJwTo7O7lw4QLNzc2UlZWJ5s8aIh4rq0x3dzcjIyP8/ve/58aNG4tzAsXgdDrZ
      t28fwWCQmzdvljTrLfh+iBpglfH7/Xg8HlpaWhgdHS1pFnhqaopr166xa9euxUwVxTI/P8+3
      336Lbdt0dnaKDHfLIASwymzbtm3x9b24omLp6OhYHD0KBAIl2Th37hw/+9nPUFWVP/7xj4sB
      eoKlrEgAtm1z48o3tO45zGR/F7rqpb0hTE//CNUNrShWjkCZTMr2URvepLts/OH3kEp9/+M9
      Hnjnvz32kHuTZ5FIBFmWicViRTelOjs7+fTTTzEMg/379xdVdiuxIgHEpkYwZQdabg67rA4f
      CYbGIuw7eIiB3l60XIIJ3Bw+XItpmgv5PW0b2bKK7nxYloV1fzSoXUo0qLUkGrSURe+mtTSi
      VLEspCLs2JaF+ZiIVIAvvviCuro6+vv7yWQyvP3224+NYn0UIyMjmKbJrVu3aGhoKLr8VmFF
      ApiYjpKajzPt8yKZHgxMFMlGN0ws26bM64dMHt20ccoytm2XHA0qyfKS9nQpIyPyAzZKSXb0
      kI0SeFL5QCDAhQsXePPNN/nmm29QFKXo692xYwfffvstLS0tdHZ2iojUZViRAA4cfoHU/Byy
      O8jsWD+a4qe9LkRPT9fC/gBmjmBLGXPxBDWVISRJKnlITwK4r6xUyq9XWiqcUmxIPHgNxdl4
      8Doehdfr5ciRI5SXl/Pqq68W7SMs1Jg/+clP6O3tLUlAW4UVd4L9oYWMB96O79KH7D9wbxHJ
      woxpTXGRAFueiYkJ2tra+OSTT6itreXgwYNF/4C//vprfD4fDocDTdOKDsfYKohRoA3Itm3b
      aG5upr29veRh0IqKCn74wx+SzWYZHBxk9+7dq+zl5kBMhG1Adu3atRgCPTo6WlKW6pMnTwIL
      zalsNks2my3aRjQapbe3l6+++opUMSNdzxBCABuQdDrN2NgYZ8+eJRAIlJSeJRqNEovF+NOf
      /kQ4HC6pCXTu3Dl6enqorq7m/PnzRZd/FhAC2IAMDg7yn//5n/T09JBIJEoawbl8+TJXr17l
      xRdf5Pr16yXZqKysxLIsrl+/Tn19fdHlnwVEH2ADsn//fhoaGnj//ffp6OgoaQTnhRde4NNP
      P+XDDz/kBz/4QUl+HD9+fHH+5saNGyXZ2OgIAWxAuru7cTgclJeXc+bMGV599dWiRdDX10cg
      EODGjRskEomS/Pi3f/s3wuEwiqIQj8dLsrHREQLYgBQKBW7fvk1rayv9/f0lrQhra2vjypUr
      NDU1sW/fvpL8eOWVV5AkiUAgwOTkZEk2NjpCABuQgwcPEggEiEajnDp1qiQbtbW1vPzyyyW3
      /wHOnDmDqqq8+OKL3Lp1i8bGxpLsbGREJ3gDIkkS7e3tHD9+nHQ6zezsbEl2FEXh8OHDXLly
      paRhzPLycl577TW+/vpr0ul0ST5sdFZUA2j5LIl0jnA4jJZNYcpOvG4n87E4/lAYy9RxOBQ0
      zcLl2iLbzKwC0WiU0dFRJEni+vXr/OpXvyraRl9fH9evXycej3Py5En8fn/RNn76058C8Prr
      r9Pb24tlWZtuaebKUiOm0+iZBL3JNPlYDBSJ2pCXDA4mZuYpUy1USyNQ34GYif/+aJpGPB5n
      //79jIyMlGSjp6eH1157jS+++IK+vr6id7qBhTxJFy5cIBgM0tzcXFL07EZnRQLwelz09E7R
      1NKIXNGMx5wjmjHYv287fT29d5PjhmjxuTZkctxSbqjxgA0Fu6hwOBueGA5dW1tLTU0NkiTx
      +uuvY9t20eHML7zwAp999hnNzc2Ew+GSwqE//PBDjh49yjfffEMsFuPUqVObLqx6RQKYi8Wp
      qAiTyEhkY30kVSfNNUFu3bqF6vLhL6/Fo9hMzCZpqFxY2bSRkuOWMr6uPpRgt/ho0PvLm5bN
      f3THirJR6XVwouXxK8Vu3LhBZWUlMzMzDA4O8sYbbxR1DljY6+DGjRscOnSIQqGwKTPUreiK
      qmsbKDdMnC4XltGILcmoikyoWsPhdMLd4TuxqHt5bCCeK+6p6lKfLDpFUejq6uIXv/gFn332
      WUm+3ZsIs22b69evF11e13X+6Z/+iV27dnHs2LGStp1da1YkAEV1oKgLnVv5vhSAi3End5+w
      YjHG0+fHP/7x4utt27ZRKBSKjgf6wx/+QCgUQlEUEokEx44dK9qPHTt28OKLL3Lp0iWOHTtW
      UqrItWTz1WmCh5BluaTm3t/+7d+iqiplZWVMT08XXV5VVSoqKpienqasrGxDNqE2nkeCVeGr
      r74iFoshyzKTk5MlrQe4N3Rq2zbDw8NUVVUV9SO2LIuJiQmuX79OKBRi9+7dG64ZJASwSeno
      6MCyLOrq6rhy5cqKbNm2jcvlKropK8syTU1NHDt2jNHR0Q25Kk0IYBNgWwa2Pr/kvaqQAihY
      hVkO7m3CKjwwm6yUIauPfxr/7ne/w+fzIUkS2WyWw4cPF+3b+Pg44+PjzM/Pc/DgwaLLrwbp
      dJpvvvkG0zTZv3//ko1PhAA2AVZ+gkzvPxRVxlH5Eu5tv3jsMa+++ioulwun01nSlrGWZaEo
      CrZtU11dTT6fX5cm0JdffsmJEyfweDx89NFHvPXWW4t9IiEAwbKcPXuW+fl5PB4P9fX1Re96
      L8syL7zwAuXl5YyNjVFWVrZGnj6eAwcOcO7cOWzbZufOnUt9XBePBM8EpmmiKAo+nw9d14su
      L0kSFRUVyLKM3+9nYKC4VPSrxeTkJJIkcfv27YeSDIgaQLAsr7/+OoZhkM/nmZ+fL3pdgmVZ
      /Mu//Ater5fKykoOHDiwht4uT0tLC5FIhMbGxof6IaIGECxLPp8nmUwyMzODZVklbfYRDoc5
      efIkFy9eLCn2amZmhg8++IBPPvmEv/71ryXZCAQC7NmzB6/XSzKZXCLiFQlAy6Xo7u6loJvM
      TY8zNRPHtgwG+u6Q003SmTSWqZFMFZ+SQ7D+nDlzhnPnzjE/P8/w8HDRE1n3tou6ePEiP/3p
      T0sKyR4aGmL37t289NJLzM7OlhRWc/bsWcbGxrBtmy+//HKJiFYkgHS2QEtDOf1Dg4xHs8Sn
      xxjuu0Owpo6+3j6mp6bou30bxbU+nR/ByvB4POi6zsjISEmpWUzT5OzZs7S0tHDhwgUKhULR
      Np5//nmGh4f57W9/y0svvVRSWE04HGZycpJ8Pv/QXMSK+gAel0LvUJSdbRUMR1Q8Vox43mBb
      wM+sKpGKR9DkIDudsgiHvndOloZDm1bxPjwYHm2V0DSxLeuJoc33FsQYhkFXV1fRodC2bRMK
      hbh9+zZ79+5dtFUMXV1dizXP559/zunTp4uOBO7s7KSzs3Mhnf+NGySTycVtq1YkgNtdXaie
      ICnNTW7uNinVw/aGMFcvXyFUWUt5mZOAS2EsGmdbdTkgwqEfDIemBAFIkrQ0pLqEp6Iky09s
      0tzrwN6bCHvuueeKPs8rr7wCwNzcHNlsloqKiqLK+/1+RkZGqKmpobKyElVVi773t2/fJhgM
      Ul9fz6FDhzBNc/HaVySAw0dfXHxd9fx3kYLPVy9dPB1eyUkE68bLL7+My+XC7XYzOjpadHnL
      shgeHqa1tZVQKEQsVty6B4Dq6moMw6CysrLkvZtHRkaorq7mxo0b7Ny5k9bW1sXPxDCoAIDY
      3BwjQ4OPPSY+O7Pk/8amJqqqa5Y93jRNzp07R3d3N+3t7Q9NQn0frly5wpEjR/j6668JBAKL
      W9AWQ11d3eIQ7IMiFAIQADA6PMR7//f/FFXm9b97+7ECkCSJHTt2cPz4cYaHhzEMo+j1AIcP
      H+azzz6joaEBoKSQatu2mZyc5Ny5c9TV1fGjH/1o8TMxDyBYMxRF4fnnn8cwDJLJJJqmFW3D
      5/Px+uuv8+KLL1JbW8vU1FTRNoaGhvjzn//M6dOnSSaTSz4TNYBgTfnNb35Da2sr3d3dRccS
      AQwMDJDNZtm7dy8dHR0lTcadPn2a6elpnE4nJ06cWDL4IQQgWDMkSeKtt96iqqqKgwcP4na7
      i7YxPDzMtm3b+OSTT6iqqippJEqW5cXs1uPj46iqujivIQQgWFNqahb6CKZp0t/fz549e4oq
      X19fT2trK9u3byedTpeUJ7Wnp4dbt27hdDoJBoMEg8HFz4QABGuGbdvMzc1hGAY3b97k+PHj
      RdvweDy89957SJKE0+nk5z//edE27oVTjI6OPpQpW3SCBWvK+++/z/j4OJOTkyXNvEciEVpa
      WjBNs+QUOydPniSdTuN0Ojlw4IDoAwieDpIk8ctf/hKn00koFCppNdiRI0fo7++ntbW15CTB
      Fy5cYHp6muHhYbxeL83NzYsiEDWAYM0wTZN//Md/5IMPPuD9998v6ektSRKNjY14vV5qa2uJ
      RCJF2zh16hRtbW2EQiGOHDmyejVAYm6anpEIRw8foOvaFXTVS0dDmN7BcSrrmlDsPH6XRE4O
      UhveWOkwBGuPoij8/d//PZ9//jmdnZ0lJcXq6+uju7ubgYEBWltbOX36dNE2VFXlxIkTdHZ2
      0t/fT0tLy+LyzJUlxw1W4HPNgB5D8TfhteIMTc5y4PAhBnp7yaXmmFICHDncIKJB752TjRkN
      apmr9H0+cDmyJPPjl17CMEx07eFllZL8+G9P0zQkSaKhoYFAIICu60XHAyWTSXp7ezly5AgO
      hwPDMBb9XpEA1LtpEZGd6IU5JHTKZMjlNQzTxl9eRSGdIa9buB0LP3kRDboxoy7PVSIAAAmZ
      SURBVEFlZeXfZ+TGGLNd338rJUmW2PPOC489prW1ldHRUTo6OtB1HYfDUfR9u3DhAnv27OH8
      +fNkMhna2tpWpw8QGR8mn9eYihmEvSauQAWt7W1MDPaxraWNyspqdu3dTWaTbrIsWHu+/fZb
      9uzZQ19fH/F4vKSZ4O3btxMMBqmurn5ow/AV1QA1jS3UNLbc/a988f3de+9tyraw+qYyLFaE
      CUpj165dqKrKq6++yvDwcEkrwlpaWtA0jaamJqLR6JLPxDCoYEORGZqC+/pmC0MnJlCgw19F
      dmhpMJzscuBuqHqszYsXLzI9PU1FRQX9/f388Ic/XPxMCECwoRj+Xx9hG9+/mVPWUEnHf/+v
      jz3m2LFjZDIZgsHgQ0mChQAEmwq9kGTk1u8e+dm95Tzp+7I8CgEINhV6IUnf5f/5vY8XM8GC
      LY0QgGBLs+oCMPU8Pbe7SGYLJBLzGFqGWCLz5IICwTqw6n2A8aEh6lraGRkaxO1SmMhmaduz
      PklRBYInseo1gG7JeNwuHIpMKh4lpck4S5hmFwieBqteA9TVhLhx5SoVtdvw+TwE3SqTM3Ea
      q8ufXFggeMqsugC85TU899zSXDHF5wQWCJ4Okl1KTHAJmKaJZVkLUZxaGrJzxRnwVIDTt2hD
      y6Yx8rmiTLgCIRTVsWhjfH6UdCFdlI3tVTtRZOW7a5mZgWICtBQZqqqXhGJH08XtvuJUZMo9
      6nc2rAJmbqwoG7IjiOyqXryOdDrF7ANxMk8iXFFJIBj87p5kCujZ75/7RwI8VQuPx3s2skNT
      FPOLlF0q7oaqxe/CMjUSM13f34enJQD4bssdYWMhdt627ZLCuu9hWRaSJJUU1n2PjfBdrIaN
      Ur+Lp9o7vXeBpl4gEo2S175fqmzT0NDuxocoikI+myYSiTAzF19cf5HP54vyo1AogG1ReMQi
      Db1Q4EnLQ2RZRtd1tEIes4RHiCRJyLKMqeeJRCKks0/w3zIpaAaFQoFCIf+deGwLTTOwDA29
      BEce/NHZloFuWAvbIsVmiUQipDJZUuk0NpDLpNEM6yEbpl4gEomSzT++BjA07ZGLgBRFJpVK
      Y9tQyKUp6N/Vqrqm3b3PNvn8o/cYkGV54cd/955alommL//7MnQdy7ZRfv3rX//6sR6vAano
      CGPzJtHxEfyhIEgyuUwWU8swHonjsAuMTs6iGHG+vNRDOOTDlhy47i6qMXSNnp5uguWVyJJF
      PD6PYehYloVTkUjldZKzU8RSOeaiEXzBcpQHVh719nZTHQ7Q0z+FYmWZTeRxOyRi8wmmB0dw
      1VQRGR5AcXnQNB3J0jBQUe/asU2D0bFhxicihIMeBgbH8Pk96IZNMjGPKkvohsHgwCBuf4h4
      dJxUwcbnWRoanhgfYM4uY2xwgNqqcgaHJwgEfMxMT5DMmXgcEoNDowQ9Cj0TceKRCVxlLsrK
      3EiShJabY3QiS5kRYSzlwOd2kM9lMQtZxqbnCAU8DPb34/J60XIapl5AdjhZbiGWkZ1hNJJj
      cmqSUKCM3t5BaqpCfHnxMs0tzdw4/xkEawl6lm40kYqOMJawiE5PUFsZYmBgGK/Pg2ZYmIUc
      sfl55hIZtLkIebcPr+PB7qfG2TNf0djeSt/lL0goFWjxKXKWwuzEGLHEPN5AkEwyg2XkGRuf
      JhAKIT/4xNfSdI/OEHKZjEVSoKWYzxqoWExPjSO7vOiZOFeu3CRcW7M+Aihk5pF9NVQ60ozO
      ZHF6vEwMDzMbm6eluZF4bIbxkQHKgtUoDj/ljjwJy7n4pasOJ+l0iobGJnpvXaO8ZhtTk2PM
      J+apDrq5M5kgGZ8lPT9HVU05ibREwLf0hvV2XSOZzpAznShGhp6+ATyyTsx249ZzZLQEI+Nz
      RGfm0PMZUskkocpKlLtfuG1ZXP76LPUdB3EYGaLRUWbiJtlMjIHeIWzZwqkoRKPTTM2kScSm
      CYQq8Hk9S9aQ5RIzjM4kAJn56RFSqRjzachqGnouRWRimGQqSSKrg1qGZOTJZTOEKqpQZAlT
      z3Dz+h1SyVk85TXE5+Ik52eYmY1RFXQwNDRB2oRQwMnY8ByF9Axl5dU4lqn7LT3Nl19dZe+h
      Q1SEfKSSWRrrKslnUuQN0PMFvOHqhwRQSM3RNxrFHwySnotS01jP4OAIyWSKZDKBpCjcuXET
      f3k5zkDwEQIwMfLZhes0CijeMLn5KH2DowTcDmq21TA+GiE5n2F+PkpN0MGs7iHkeWCdsalx
      49ZtMsl5FIfKXMrEzs0Rm4kTrKsjMh5lLj5HdSiIo8yxTqEQtsXYyCBjcZPagMLY0ADJrIaC
      wWRklujMLH6fF9OWScWmyT2mqeQJhgkHFlLuqZjc6R9ENyy8Xi9ujxd3mQvJ0kmmsksSo4ar
      69m/dw8ep8rsXAx3mRMklfq6hREsh6sMn9dHW2sLFT4HSVPBzmfIazrJ1ELHuX3PIdLRYUan
      oniCAWTJSXxqnN0HOhiPpEnHZnH5/Ei2SWW4nKGhEdLJJPlcmpy2UMVLSJS5PdiWgdvrIxiu
      p746QCDgx+FQcXt8BMLVNNYst8uCRFP7DnZvb0Ep82OnxikLNSDbBlORGL7yCsrsPOORedKJ
      CBORWfR8ilxBJ5l61Ay9xIHnnmd84M6S1Zpl5TVM9d+mur72EWUAWaG1rQW7kEdWFcbGxnG4
      fbjlAjh9yFIer9vBYqSzqZNML70niruCxGQf4eoaDD1DIm3gUBUcLg8erxdFWnCozOPD63Zh
      WxbJVPqhhLe129rYs3sHqqKiZ+ZJZjVUZxmBgBdVkdDzGSajc6Ri0afbCb6HbZnkCxpOlwtZ
      Aq2goTgcyNjopoUqS5iWjao6MAwNRVGRJBn5vnr73mYJ99rCpmkiAbphoKoOJIm7n0nYNli2
      Dba9uIbVNE0UWca0bCzTwJYkVEVGkhRsy0SSZXStgKw6GO+7hbdhFxUeFSQZy7ZQ7p4b28ay
      bUzLQlVUbHthd/R79gu6jkNVsUwDZBUZ++5C8IXrsSyTQkFDdThQZZmCpuF0OhevU4LF92xY
      XCxyr81r2xa2DRIL13HtZg+HDnXC3ba806lSKGg4nS5MQ8OWZFRZBknCsm3UB/sAtoVtL9iV
      ZXlht3dZxrLtxdc20pJ7sXBPLWwWykmShKZpOF0Ouq9dp2X/IZy2gQ2osgKyhIyNYd1/T2ws
      y8a2LGRFxrLB1HUkRUGRZSRZwrbshWuVuHt/JSzbWnJfsW1M20aWFr4qyzSwkVGU72xYpolp
      2zgd6voIQCDYKIgYBcGWRghAsKURAhBsaf4/TwNz23R1Y4kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q_2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
